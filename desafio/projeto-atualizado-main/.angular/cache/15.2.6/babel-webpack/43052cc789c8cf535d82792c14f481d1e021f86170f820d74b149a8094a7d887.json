{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoticeMessage = exports.DataRowMessage = exports.CommandCompleteMessage = exports.ReadyForQueryMessage = exports.NotificationResponseMessage = exports.BackendKeyDataMessage = exports.AuthenticationMD5Password = exports.ParameterStatusMessage = exports.ParameterDescriptionMessage = exports.RowDescriptionMessage = exports.Field = exports.CopyResponse = exports.CopyDataMessage = exports.DatabaseError = exports.copyDone = exports.emptyQuery = exports.replicationStart = exports.portalSuspended = exports.noData = exports.closeComplete = exports.bindComplete = exports.parseComplete = void 0;\nexports.parseComplete = {\n  name: 'parseComplete',\n  length: 5\n};\nexports.bindComplete = {\n  name: 'bindComplete',\n  length: 5\n};\nexports.closeComplete = {\n  name: 'closeComplete',\n  length: 5\n};\nexports.noData = {\n  name: 'noData',\n  length: 5\n};\nexports.portalSuspended = {\n  name: 'portalSuspended',\n  length: 5\n};\nexports.replicationStart = {\n  name: 'replicationStart',\n  length: 4\n};\nexports.emptyQuery = {\n  name: 'emptyQuery',\n  length: 4\n};\nexports.copyDone = {\n  name: 'copyDone',\n  length: 4\n};\nclass DatabaseError extends Error {\n  constructor(message, length, name) {\n    super(message);\n    this.length = length;\n    this.name = name;\n  }\n}\nexports.DatabaseError = DatabaseError;\nclass CopyDataMessage {\n  constructor(length, chunk) {\n    this.length = length;\n    this.chunk = chunk;\n    this.name = 'copyData';\n  }\n}\nexports.CopyDataMessage = CopyDataMessage;\nclass CopyResponse {\n  constructor(length, name, binary, columnCount) {\n    this.length = length;\n    this.name = name;\n    this.binary = binary;\n    this.columnTypes = new Array(columnCount);\n  }\n}\nexports.CopyResponse = CopyResponse;\nclass Field {\n  constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n    this.name = name;\n    this.tableID = tableID;\n    this.columnID = columnID;\n    this.dataTypeID = dataTypeID;\n    this.dataTypeSize = dataTypeSize;\n    this.dataTypeModifier = dataTypeModifier;\n    this.format = format;\n  }\n}\nexports.Field = Field;\nclass RowDescriptionMessage {\n  constructor(length, fieldCount) {\n    this.length = length;\n    this.fieldCount = fieldCount;\n    this.name = 'rowDescription';\n    this.fields = new Array(this.fieldCount);\n  }\n}\nexports.RowDescriptionMessage = RowDescriptionMessage;\nclass ParameterDescriptionMessage {\n  constructor(length, parameterCount) {\n    this.length = length;\n    this.parameterCount = parameterCount;\n    this.name = 'parameterDescription';\n    this.dataTypeIDs = new Array(this.parameterCount);\n  }\n}\nexports.ParameterDescriptionMessage = ParameterDescriptionMessage;\nclass ParameterStatusMessage {\n  constructor(length, parameterName, parameterValue) {\n    this.length = length;\n    this.parameterName = parameterName;\n    this.parameterValue = parameterValue;\n    this.name = 'parameterStatus';\n  }\n}\nexports.ParameterStatusMessage = ParameterStatusMessage;\nclass AuthenticationMD5Password {\n  constructor(length, salt) {\n    this.length = length;\n    this.salt = salt;\n    this.name = 'authenticationMD5Password';\n  }\n}\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\nclass BackendKeyDataMessage {\n  constructor(length, processID, secretKey) {\n    this.length = length;\n    this.processID = processID;\n    this.secretKey = secretKey;\n    this.name = 'backendKeyData';\n  }\n}\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\nclass NotificationResponseMessage {\n  constructor(length, processId, channel, payload) {\n    this.length = length;\n    this.processId = processId;\n    this.channel = channel;\n    this.payload = payload;\n    this.name = 'notification';\n  }\n}\nexports.NotificationResponseMessage = NotificationResponseMessage;\nclass ReadyForQueryMessage {\n  constructor(length, status) {\n    this.length = length;\n    this.status = status;\n    this.name = 'readyForQuery';\n  }\n}\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\nclass CommandCompleteMessage {\n  constructor(length, text) {\n    this.length = length;\n    this.text = text;\n    this.name = 'commandComplete';\n  }\n}\nexports.CommandCompleteMessage = CommandCompleteMessage;\nclass DataRowMessage {\n  constructor(length, fields) {\n    this.length = length;\n    this.fields = fields;\n    this.name = 'dataRow';\n    this.fieldCount = fields.length;\n  }\n}\nexports.DataRowMessage = DataRowMessage;\nclass NoticeMessage {\n  constructor(length, message) {\n    this.length = length;\n    this.message = message;\n    this.name = 'notice';\n  }\n}\nexports.NoticeMessage = NoticeMessage;","map":{"version":3,"names":["Object","defineProperty","exports","value","NoticeMessage","DataRowMessage","CommandCompleteMessage","ReadyForQueryMessage","NotificationResponseMessage","BackendKeyDataMessage","AuthenticationMD5Password","ParameterStatusMessage","ParameterDescriptionMessage","RowDescriptionMessage","Field","CopyResponse","CopyDataMessage","DatabaseError","copyDone","emptyQuery","replicationStart","portalSuspended","noData","closeComplete","bindComplete","parseComplete","name","length","Error","constructor","message","chunk","binary","columnCount","columnTypes","Array","tableID","columnID","dataTypeID","dataTypeSize","dataTypeModifier","format","fieldCount","fields","parameterCount","dataTypeIDs","parameterName","parameterValue","salt","processID","secretKey","processId","channel","payload","status","text"],"sources":["C:/Users/joao2/Desktop/NOVO-PROJETO/node_modules/pg-protocol/dist/messages.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoticeMessage = exports.DataRowMessage = exports.CommandCompleteMessage = exports.ReadyForQueryMessage = exports.NotificationResponseMessage = exports.BackendKeyDataMessage = exports.AuthenticationMD5Password = exports.ParameterStatusMessage = exports.ParameterDescriptionMessage = exports.RowDescriptionMessage = exports.Field = exports.CopyResponse = exports.CopyDataMessage = exports.DatabaseError = exports.copyDone = exports.emptyQuery = exports.replicationStart = exports.portalSuspended = exports.noData = exports.closeComplete = exports.bindComplete = exports.parseComplete = void 0;\nexports.parseComplete = {\n    name: 'parseComplete',\n    length: 5,\n};\nexports.bindComplete = {\n    name: 'bindComplete',\n    length: 5,\n};\nexports.closeComplete = {\n    name: 'closeComplete',\n    length: 5,\n};\nexports.noData = {\n    name: 'noData',\n    length: 5,\n};\nexports.portalSuspended = {\n    name: 'portalSuspended',\n    length: 5,\n};\nexports.replicationStart = {\n    name: 'replicationStart',\n    length: 4,\n};\nexports.emptyQuery = {\n    name: 'emptyQuery',\n    length: 4,\n};\nexports.copyDone = {\n    name: 'copyDone',\n    length: 4,\n};\nclass DatabaseError extends Error {\n    constructor(message, length, name) {\n        super(message);\n        this.length = length;\n        this.name = name;\n    }\n}\nexports.DatabaseError = DatabaseError;\nclass CopyDataMessage {\n    constructor(length, chunk) {\n        this.length = length;\n        this.chunk = chunk;\n        this.name = 'copyData';\n    }\n}\nexports.CopyDataMessage = CopyDataMessage;\nclass CopyResponse {\n    constructor(length, name, binary, columnCount) {\n        this.length = length;\n        this.name = name;\n        this.binary = binary;\n        this.columnTypes = new Array(columnCount);\n    }\n}\nexports.CopyResponse = CopyResponse;\nclass Field {\n    constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n        this.name = name;\n        this.tableID = tableID;\n        this.columnID = columnID;\n        this.dataTypeID = dataTypeID;\n        this.dataTypeSize = dataTypeSize;\n        this.dataTypeModifier = dataTypeModifier;\n        this.format = format;\n    }\n}\nexports.Field = Field;\nclass RowDescriptionMessage {\n    constructor(length, fieldCount) {\n        this.length = length;\n        this.fieldCount = fieldCount;\n        this.name = 'rowDescription';\n        this.fields = new Array(this.fieldCount);\n    }\n}\nexports.RowDescriptionMessage = RowDescriptionMessage;\nclass ParameterDescriptionMessage {\n    constructor(length, parameterCount) {\n        this.length = length;\n        this.parameterCount = parameterCount;\n        this.name = 'parameterDescription';\n        this.dataTypeIDs = new Array(this.parameterCount);\n    }\n}\nexports.ParameterDescriptionMessage = ParameterDescriptionMessage;\nclass ParameterStatusMessage {\n    constructor(length, parameterName, parameterValue) {\n        this.length = length;\n        this.parameterName = parameterName;\n        this.parameterValue = parameterValue;\n        this.name = 'parameterStatus';\n    }\n}\nexports.ParameterStatusMessage = ParameterStatusMessage;\nclass AuthenticationMD5Password {\n    constructor(length, salt) {\n        this.length = length;\n        this.salt = salt;\n        this.name = 'authenticationMD5Password';\n    }\n}\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\nclass BackendKeyDataMessage {\n    constructor(length, processID, secretKey) {\n        this.length = length;\n        this.processID = processID;\n        this.secretKey = secretKey;\n        this.name = 'backendKeyData';\n    }\n}\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\nclass NotificationResponseMessage {\n    constructor(length, processId, channel, payload) {\n        this.length = length;\n        this.processId = processId;\n        this.channel = channel;\n        this.payload = payload;\n        this.name = 'notification';\n    }\n}\nexports.NotificationResponseMessage = NotificationResponseMessage;\nclass ReadyForQueryMessage {\n    constructor(length, status) {\n        this.length = length;\n        this.status = status;\n        this.name = 'readyForQuery';\n    }\n}\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\nclass CommandCompleteMessage {\n    constructor(length, text) {\n        this.length = length;\n        this.text = text;\n        this.name = 'commandComplete';\n    }\n}\nexports.CommandCompleteMessage = CommandCompleteMessage;\nclass DataRowMessage {\n    constructor(length, fields) {\n        this.length = length;\n        this.fields = fields;\n        this.name = 'dataRow';\n        this.fieldCount = fields.length;\n    }\n}\nexports.DataRowMessage = DataRowMessage;\nclass NoticeMessage {\n    constructor(length, message) {\n        this.length = length;\n        this.message = message;\n        this.name = 'notice';\n    }\n}\nexports.NoticeMessage = NoticeMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}